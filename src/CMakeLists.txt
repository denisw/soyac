BISON_TARGET(SoyaParser
  parser/soya.yy
  ${CMAKE_CURRENT_SOURCE_DIR}/parser/parser.cpp)

set(SOYAC_SOURCES
  ${BISON_SoyaParser_OUTPUTS}
  analysis/BasicAnalyzer.cpp
  analysis/BasicAnalyzer.hpp
  analysis/ControlFlowAnalyzer.cpp
  analysis/ControlFlowAnalyzer.hpp
  analysis/FunctionGroup.cpp
  analysis/FunctionGroup.hpp
  analysis/ModulesRequiredException.hpp
  analysis/NavigatingVisitor.cpp
  analysis/NavigatingVisitor.hpp
  analysis/SymbolTable.cpp
  analysis/SymbolTable.hpp
  ast/ArrayCreationExpression.cpp
  ast/ArrayCreationExpression.hpp
  ast/ArrayType.cpp
  ast/ArrayType.hpp
  ast/AssignmentExpression.cpp
  ast/AssignmentExpression.hpp
  ast/Block.cpp
  ast/Block.hpp
  ast/BooleanLiteral.cpp
  ast/BooleanLiteral.hpp
  ast/BooleanType.cpp
  ast/BooleanType.hpp
  ast/BuiltInType.cpp
  ast/BuiltInType.hpp
  ast/CallExpression.cpp
  ast/CallExpression.hpp
  ast/CastExpression.cpp
  ast/CastExpression.hpp
  ast/CharacterLiteral.cpp
  ast/CharacterLiteral.hpp
  ast/CharacterType.cpp
  ast/CharacterType.hpp
  ast/ClassType.cpp
  ast/ClassType.hpp
  ast/CombinedRelationalExpression.cpp
  ast/CombinedRelationalExpression.hpp
  ast/CompoundAssignmentExpression.cpp
  ast/CompoundAssignmentExpression.hpp
  ast/Constructor.cpp
  ast/Constructor.hpp
  ast/ConstructorInitializer.cpp
  ast/ConstructorInitializer.hpp
  ast/DeclarationBlock.cpp
  ast/DeclarationBlock.hpp
  ast/DeclarationStatement.cpp
  ast/DeclarationStatement.hpp
  ast/DeclaredEntity.cpp
  ast/DeclaredEntity.hpp
  ast/DoStatement.cpp
  ast/DoStatement.hpp
  ast/EntityImport.cpp
  ast/EntityImport.hpp
  ast/EnumConstant.cpp
  ast/EnumConstant.hpp
  ast/EnumType.cpp
  ast/EnumType.hpp
  ast/EnumValueExpression.cpp
  ast/EnumValueExpression.hpp
  ast/Expression.cpp
  ast/Expression.hpp
  ast/ExpressionStatement.cpp
  ast/ExpressionStatement.hpp
  ast/FloatingPointLiteral.cpp
  ast/FloatingPointLiteral.hpp
  ast/FloatingPointType.cpp
  ast/FloatingPointType.hpp
  ast/FloatingPointValue.cpp
  ast/FloatingPointValue.hpp
  ast/ForStatement.cpp
  ast/ForStatement.hpp
  ast/Function.cpp
  ast/Function.hpp
  ast/FunctionExpression.cpp
  ast/FunctionExpression.hpp
  ast/FunctionGroupImport.cpp
  ast/FunctionGroupImport.hpp
  ast/FunctionParameter.cpp
  ast/FunctionParameter.hpp
  ast/FunctionParameterExpression.cpp
  ast/FunctionParameterExpression.hpp
  ast/FunctionType.cpp
  ast/FunctionType.hpp
  ast/IfStatement.cpp
  ast/IfStatement.hpp
  ast/Import.cpp
  ast/Import.hpp
  ast/InstanceFunctionExpression.cpp
  ast/InstanceFunctionExpression.hpp
  ast/InstanceVariableExpression.cpp
  ast/InstanceVariableExpression.hpp
  ast/IntegerLiteral.cpp
  ast/IntegerLiteral.hpp
  ast/IntegerType.cpp
  ast/IntegerType.hpp
  ast/IntegerValue.cpp
  ast/IntegerValue.hpp
  ast/Link.hpp
  ast/Location.cpp
  ast/Location.hpp
  ast/LogicalExpression.cpp
  ast/LogicalExpression.hpp
  ast/LogicalNotExpression.cpp
  ast/LogicalNotExpression.hpp
  ast/Module.cpp
  ast/Module.hpp
  ast/ModuleExpression.cpp
  ast/ModuleExpression.hpp
  ast/ModuleImport.cpp
  ast/ModuleImport.hpp
  ast/Name.cpp
  ast/Name.hpp
  ast/NamedEntity.cpp
  ast/NamedEntity.hpp
  ast/Node.cpp
  ast/Node.hpp
  ast/NodeList.hpp
  ast/ObjectCreationExpression.cpp
  ast/ObjectCreationExpression.hpp
  ast/Property.cpp
  ast/Property.hpp
  ast/PropertyGetAccessor.cpp
  ast/PropertyGetAccessor.hpp
  ast/PropertySetAccessor.cpp
  ast/PropertySetAccessor.hpp
  ast/ReturnStatement.cpp
  ast/ReturnStatement.hpp
  ast/Statement.cpp
  ast/Statement.hpp
  ast/StatementWithBody.cpp
  ast/StatementWithBody.hpp
  ast/StructType.cpp
  ast/StructType.hpp
  ast/ThisExpression.cpp
  ast/ThisExpression.hpp
  ast/Type.cpp
  ast/Type.hpp
  ast/TypeExpression.cpp
  ast/TypeExpression.hpp
  ast/UnknownArrayType.cpp
  ast/UnknownArrayType.hpp
  ast/UnknownFunctionType.cpp
  ast/UnknownFunctionType.hpp
  ast/UnknownType.cpp
  ast/UnknownType.hpp
  ast/UnresolvedBaseConstructorInitializer.cpp
  ast/UnresolvedBaseConstructorInitializer.hpp
  ast/UnresolvedBinaryExpression.cpp
  ast/UnresolvedBinaryExpression.hpp
  ast/UnresolvedConstructorInitializer.cpp
  ast/UnresolvedConstructorInitializer.hpp
  ast/UnresolvedDefaultConstructorInitializer.cpp
  ast/UnresolvedDefaultConstructorInitializer.hpp
  ast/UnresolvedElementAccessExpression.cpp
  ast/UnresolvedElementAccessExpression.hpp
  ast/UnresolvedEntityImport.cpp
  ast/UnresolvedEntityImport.hpp
  ast/UnresolvedFunctionExpression.cpp
  ast/UnresolvedFunctionExpression.hpp
  ast/UnresolvedInstanceFunctionExpression.cpp
  ast/UnresolvedInstanceFunctionExpression.hpp
  ast/UnresolvedInstancePropertyExpression.cpp
  ast/UnresolvedInstancePropertyExpression.hpp
  ast/UnresolvedMemberAccessExpression.cpp
  ast/UnresolvedMemberAccessExpression.hpp
  ast/UnresolvedModuleImport.cpp
  ast/UnresolvedModuleImport.hpp
  ast/UnresolvedObjectCreationExpression.cpp
  ast/UnresolvedObjectCreationExpression.hpp
  ast/UnresolvedSimpleNameExpression.cpp
  ast/UnresolvedSimpleNameExpression.hpp
  ast/UnresolvedThisExpression.cpp
  ast/UnresolvedThisExpression.hpp
  ast/UserDefinedType.cpp
  ast/UserDefinedType.hpp
  ast/Variable.cpp
  ast/Variable.hpp
  ast/VariableExpression.cpp
  ast/VariableExpression.hpp
  ast/Visitor.hpp
  ast/VoidType.cpp
  ast/VoidType.hpp
  ast/WhileStatement.cpp
  ast/WhileStatement.hpp
  ast/ast.hpp
  codegen/CodeGenerator.cpp
  codegen/CodeGenerator.hpp
  codegen/LLValueExpression.cpp
  codegen/LLValueExpression.hpp
  common/PassResult.cpp
  common/PassResult.hpp
  common/PassResultBuilder.cpp
  common/PassResultBuilder.hpp
  common/Problem.cpp
  common/Problem.hpp
  driver/FileProcessor.cpp
  driver/FileProcessor.hpp
  driver/ProblemReport.cpp
  driver/ProblemReport.hpp
  driver/config.cpp
  driver/config.hpp
  driver/link.cpp
  driver/link.hpp
  driver/main.cpp
  parser/Lexer.cpp
  parser/Lexer.hpp
  parser/ParserDriver.cpp
  parser/ParserDriver.hpp
)

add_executable(soyac ${SOYAC_SOURCES})

source_group("Analysis" REGULAR_EXPRESSION "analysis/.*\\.[ch]pp")
source_group("AST" REGULAR_EXPRESSION "ast/.*\\.[ch]pp")
source_group("CodeGen" REGULAR_EXPRESSION "codegen/.*\\.[ch]pp")
source_group("Common" REGULAR_EXPRESSION "common/.*\\.[ch]pp")
source_group("Driver" REGULAR_EXPRESSION "driver/.*\\.[ch]pp")
source_group("Parser" REGULAR_EXPRESSION "parser.*\\.[ch]pp")

target_include_directories(soyac PRIVATE
  ${LLVM_INCLUDE_DIRS}
  ${CMAKE_BINARY_DIR}
  ${CMAKE_CURRENT_SOURCE_DIR})

llvm_map_components_to_libnames(SOYAC_LLVM_LIBS
  core
  support
  nativecodegen)

target_link_libraries(soyac
  ${SOYAC_LLVM_LIBS}
  Boost::headers
  Boost::program_options
  Boost::regex
  PkgConfig::SigCPP)

