# -*- mode: python -*-

env = Environment(CCFLAGS = ['-I./src', '-O0', '-g'])
env.Alias('install', '/usr/local')

env.ParseConfig('llvm-config --cflags --libs')
env.ParseConfig('pkg-config sigc++-2.0 --cflags --libs')
env.Append(LIBS = ['boost_regex', 'popt', 'dl'])

# Parser (generated by Bison)
parser = env.CXXFile(target = 'src/parser/parser.cpp',
                     source = 'src/parser/soya.yy')

# Core (used by compiler and test suite)
core_sources = [f for f in Glob('src/*/*.cpp') if 'main.cpp' not in str(f)]
core_sources.append('src/parser/parser.cpp')
core = env.Library('soyac_core', core_sources)
env.Depends('src/driver/FileProcessor.o', 'src/parser/parser.cpp')

# Compiler
compiler_env = env.Clone()
compiler_env.Append(LIBS = [core])
compiler = compiler_env.Program('soyac', ['src/driver/main.cpp'])
compiler_env.Install('/usr/local/bin', compiler)

# Test suite
test_env = env.Clone()
test_env.ParseConfig('cppunit-config --libs --cflags')
test_env.Append(LIBS = [core, 'boost_system', 'boost_filesystem'])
test_env.Program('test-soyac', ['test/test-soyac.cpp'])

# Runtime library
runtime_env = Environment(LIBS = ['gc'])
runtime = runtime_env.Library('sr', ['runtime/libsr.c'])
runtime_env.Install('/usr/local/lib', runtime)
runtime_env.Install('/usr/local/include/soya', 'runtime/__core__.soyi')
